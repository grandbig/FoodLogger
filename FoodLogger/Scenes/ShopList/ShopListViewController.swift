//
//  ShopListViewController.swift
//  FoodLogger
//
//  Created by Takahiro Kato on 2017/09/24.
//  Copyright © 2017年 Takahiro Kato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import UIKit
import CoreLocation
import RealmSwift
import SwiftyJSON
import AlamofireImage

protocol ShopListDisplayLogic: class {
    func displayMyShop(viewModel: ShopList.FetchMyShop.ViewModel)
}

class ShopListViewController: UIViewController, UINavigationControllerDelegate, ShopListDisplayLogic {
    var interactor: ShopListBusinessLogic?
    var router: (NSObjectProtocol & ShopListRoutingLogic & ShopListDataPassing)?
    var displayMyShops: [MyShop] = []
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ShopListInteractor()
        let presenter = ShopListPresenter()
        let router = ShopListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.title = "レストランの来店履歴"
        self.navigationController?.delegate = self
        configureTableView()
        
        fetchMyShopOnLoad()
    }
    
    // MARK: Fetch my shop
    
    /// UITableView
    @IBOutlet weak var tableView: UITableView!
    /// 検索ショップ
    internal var shops: Results<RealmShop>!
    /// UITableViewCellの高さ
    private let rowHeight: CGFloat = 88.0
    
    func configureTableView() {
        tableView.delegate = self
        tableView.dataSource = self
        
        let nib = UINib.init(nibName: "CustomTableViewCell", bundle: nil)
        self.tableView.register(nib, forCellReuseIdentifier: "ShopInfoCell")
        self.tableView.rowHeight = self.rowHeight
    }
    
    func fetchMyShopOnLoad() {
        let request = ShopList.FetchMyShop.Request()
        interactor?.fetchMyShop(request: request)
    }
    
    func displayMyShop(viewModel: ShopList.FetchMyShop.ViewModel) {
        // テーブルビューのリロード
        tableView.reloadData()
    }
    
    // MARK: Other
    /**
     タイムスタンプを指定フォーマットの文字列に日時を変換する処理
     
     - parameter timestamp: タイムスタンプ
     - returns: 指定フォーマットの文字列の日時
     */
    func formatTimestamp(timestamp: Double) -> String {
        let date = Date.init(timeIntervalSince1970: timestamp)
        let formatter = DateFormatter()
        formatter.dateFormat = "yyyy-MM-dd' 'HH:mm"
        return formatter.string(from: date)
    }
}

extension ShopListViewController: UITableViewDelegate, UITableViewDataSource {
    // MARK: UITableViewDelegate
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        // 選択時にハイライト解除
        tableView.deselectRow(at: indexPath, animated: true)
        
        let shop = displayMyShops[indexPath.row] as HotpepperShop
        // 画面遷移
        // performSegue(withIdentifier: "editShopMemoSegue", sender: shop)
    }
    
    // MARK: UITableViewDataSource
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayMyShops.count
    }
    
    public func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "ShopInfoCell", for: indexPath) as? CustomTableViewCell
        cell?.nameLabel.text = displayMyShops[indexPath.row].name
        cell?.ratingLabel.text = Rating().changeRatingValue(rating: displayMyShops[indexPath.row].rating)
        cell?.datetimeLabel.text = formatTimestamp(timestamp: displayMyShops[indexPath.row].created)
        if let imageURL = displayMyShops[indexPath.row].imageURL, let url = URL(string: imageURL) {
            cell?.imgView?.af_setImage(withURL: url, placeholderImage: UIImage(named: "NoImageIcon"))
        }
        cell?.accessoryType = UITableViewCellAccessoryType.disclosureIndicator
        
        return cell!
    }
}

/*
class ShopListViewController: UIViewController, UITableViewDelegate, UITableViewDataSource, UINavigationControllerDelegate {
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: UINavigationControllerDelegate
    func navigationController(_ navigationController: UINavigationController, animationControllerFor operation: UINavigationControllerOperation, from fromVC: UIViewController, to toVC: UIViewController) -> UIViewControllerAnimatedTransitioning? {
        if let createShopMemoViewController = fromVC as? CreateShopMemoViewController, toVC as? ShopListViewController != nil {
            // createShopMemoViewControllerから戻ってきた場合
            if createShopMemoViewController.isSaved {
                // ショップを新たに保存した場合
                self.tableView.reloadData()
            }
        }
        return nil
    }
    
    // MARK: Storyboard Segue
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        let backButton = UIBarButtonItem.init()
        backButton.title = "戻る"
        backButton.tintColor = UIColor.white
        self.navigationController?.navigationBar.tintColor = UIColor.white
        self.navigationItem.backBarButtonItem = backButton
        
        if segue.identifier == "editShopMemoSegue" {
            guard let createShopMemoViewController = segue.destination as? CreateShopMemoViewController else {
                return
            }
            guard let shop = sender as? HotpepperShop else {
                return
            }
            createShopMemoViewController.shop = shop
            createShopMemoViewController.isRightButton = true
        }
    }
    
 
}
 */
