//
//  CreateShopMemoPresenter.swift
//  FoodLogger
//
//  Created by Takahiro Kato on 2017/09/24.
//  Copyright © 2017年 Takahiro Kato. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateShopMemoPresentationLogic {
    func presentShopStatus(response: CreateShopMemo.FetchShopStatus.Response)
    func presentCreatedMyShop(response: CreateShopMemo.CreateMyShop.Response)
    func presentUpdatedMyShop(response: CreateShopMemo.UpdateMyShop.Response)
    func presentUploadedImage(response: CreateShopMemo.UploadImage.Response)
}

class CreateShopMemoPresenter: CreateShopMemoPresentationLogic {
    
    weak var viewController: CreateShopMemoDisplayLogic?
    
    // MARK: Present shop status
    func presentShopStatus(response: CreateShopMemo.FetchShopStatus.Response) {
        var isSaved: Bool = false
        if response.shop != nil {
            isSaved = true
        }
        let displaySavedShop = CreateShopMemo.FetchShopStatus.ViewModel.SavedShop(shop: response.shop, isSaved: isSaved)
        let viewModel = CreateShopMemo.FetchShopStatus.ViewModel(savedShop: displaySavedShop)
        viewController?.displayShopStatus(viewModel: viewModel)
    }
    
    // MARK: Created my shop
    func presentCreatedMyShop(response: CreateShopMemo.CreateMyShop.Response) {
        let viewModel = CreateShopMemo.CreateMyShop.ViewModel(isSaved: response.isSaved, message: response.message)
        if response.isSaved {
            // 保存に成功した場合
            viewController?.displayCreatedMyShop(viewModel: viewModel)
            return
        }
        // 保存に失敗した場合
        viewController?.displayFailureToCreateMyShop(viewModel: viewModel)
    }
    
    // MARK: Updated my shop
    func presentUpdatedMyShop(response: CreateShopMemo.UpdateMyShop.Response) {
        let viewModel = CreateShopMemo.UpdateMyShop.ViewModel(isSaved: response.isSaved, message: response.message)
        if response.isSaved {
            // 更新に成功した場合
            viewController?.displayUpdatedMyShop(viewModel: viewModel)
            return
        }
        
        // 更新に失敗した場合
        viewController?.displayFailureToUpdateMyShop(viewModel: viewModel)
    }
    
    // MARK: Uploaded image
    func presentUploadedImage(response: CreateShopMemo.UploadImage.Response) {
        
    }
}
